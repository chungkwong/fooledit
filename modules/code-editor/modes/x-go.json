{
    "states":{"init":0},
    "shorthands":["escape","\\\\([abfnrtv\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[0-7]{3})"],
    "rules":[
		{"old state":"init","new state":"init","type":"keyword","regex":"break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var"},
	    {"old state":"init","new state":"init","type":"float","regex":"([0-9]+\\.[0-9]*|\\.[0-9]+)([eE][-+]?[0-9]+)?i?"},
	    {"old state":"init","new state":"init","type":"float","regex":"[0-9]+[eE][-+]?[0-9]+i?"},
	    {"old state":"init","new state":"init","type":"integer","regex":"(0[xX][0-9a-fA-F]+|0[0-7]*|[1-9][0-9]*)i?"},
		{"old state":"init","new state":"init","type":"char","regex":"'([^\\\\']|{escape})'"},
		{"old state":"init","new state":"init","type":"string","regex":"`[^`]*`|\"([^\\\\\"]|{escape})*\""},
		{"old state":"init","new state":"init","type":"name","regex":"[_\\p{javaLetter}][_\\p{javaLetter}\\p{javaDigit}]*"},
		{"old state":"init","new state":"init","type":"whitespace","regex":"\\s+"},
		{"old state":"init","new state":"init","type":"comment","regex":"//.*?$|/\\*.*?\\*/"},
	    {"old state":"init","new state":"init","type":"other","regex":"\\.\\.\\.|--|\\+\\+|\\|\\||\\&\\&|<-|(<<|>>|\\&\\^|[-+*/%\\&\\|^:=<>!])=?|[\\(\\)\\[\\]\\{\\},;=\\.]"}
	]
}