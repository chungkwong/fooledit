{
    "states":{"init":0},
    "shorthands":["escape","\\\\([bdefnrstv'\"\\\\]|\\^[a-zA-Z]|x[0-9a-fA-F]{2}|x\\{[0-9a-fA-F]+\\}|[0-7]{1,3})"],
    	"rules":[
		{"old state":"init","new state":"init","type":"keyword","regex":"after|and(also)?|band|begin|bnot|bor|bsl|bsr|bxor|case|catch|cond|div|end|fun|if|let|not|of|or(else)?|receive|rem|try|when|xor"},
	    {"old state":"init","new state":"init","type":"float","regex":"[0-9]+\\.[0-9]+([eE][-+]?[0-9]+)?"},
	    {"old state":"init","new state":"init","type":"float","regex":"[0-9]+[eE][-+]?[0-9]+"},
		{"old state":"init","new state":"init","type":"integer","regex":"(3[0-6]|[12][0-9]|[2-9])#[0-9a-zA-Z]+|[0-9]+"},
		{"old state":"init","new state":"init","type":"string","regex":"\"([^\"\\\\]|{escape})*\""},
		{"old state":"init","new state":"init","type":"name","regex":"[a-z][a-zA-Z0-9]*|'([^'\\\\]|{escape})*'"},
		{"old state":"init","new state":"init","type":"variable","regex":"[_A-Z][_@a-zA-Z0-9]*"},
		{"old state":"init","new state":"init","type":"whitespace","regex":"\\s+"},
	    {"old state":"init","new state":"init","type":"other","regex":"=[/:]=|=[=<>]|[=</>:]=|->|<-|>>|<<|--|\\+\\+|\\|\\||#\\{|[-+*/:;,#\\(\\)\\[\\]\\{\\}\\|\\.=<>!]"},
		{"old state":"init","new state":"init","type":"comment","regex":"%.*?$"}
	]
}
