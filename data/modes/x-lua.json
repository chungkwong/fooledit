{
    "states":{"init":0},
    "shorthands":["escape","\\\\([abfnrtvz'\"\\n\\\\]|x[0-9a-fA-F]{2}|u\\{[0-9a-fA-F]+\\}|[0-9]{1,3})",
		  "block0","\\{[^\\{\\}]*\\}",
		  "block1","\\{([^\\{\\}]|{block0})*\\}",
		  "block2","\\{([^\\{\\}]|{block1})*\\}",
		  "block3","\\{([^\\{\\}]|{block2})*\\}",
		  "block4","\\{([^\\{\\}]|{block3})*\\}"],
    "rules":[
		{"old state":"init","new state":"init","type":"keyword","regex":"and|break|do|else(if)?|end|for|function|goto|if|in|local|not|or|repeat|return|then|until|while"},
		{"old state":"init","new state":"init","type":"boolean","regex":"true|false"},
		{"old state":"init","new state":"init","type":"null","regex":"nil"},
		{"old state":"init","new state":"init","type":"string","regex":"'([^'\\\\]|{escape})*'|\"([^\"\\\\]|{escape})*\""},
		{"old state":"init","new state":"init","type":"string","regex":"\\[(=*)\\[.*?\\]\\1\\]"},
		{"old state":"init","new state":"init","type":"name","regex":"[_a-zA-Z][_0-9a-zA-Z]*"},
		{"old state":"init","new state":"init","type":"float","regex":"0[xX]([0-9a-fA-F]+\\.[0-9a-fA-F]*|\\.[0-9a-fA-F]+)([pP][-+]?[0-9]+)?|([0-9]+\\.[0-9]*|\\.[0-9]+)([eE][-+]?[0-9]+)?"},
		{"old state":"init","new state":"init","type":"float","regex":"0[xX][0-9a-fA-F]+[pP][-+]?[0-9]+|[0-9]+[eE][-+]?[0-9]+"},
		{"old state":"init","new state":"init","type":"integer","regex":"0[xX][0-9a-fA-F]+|[0-9]+"},
		{"old state":"init","new state":"init","type":"comment","regex":"--({block4}|.*?$)"},
		{"old state":"init","new state":"init","type":"whitespace","regex":"\\s+"},
		{"old state":"init","new state":"init","type":"other","regex":"\\.{1,3}|[/\\&\\|<>=:]{2}|[=~><]=|[-+*/%^#\\&\\|~=\\{\\}\\[\\]\\(\\);:,]"}
	]
}
