{
    "states":{"init":0,"element":1,"attlist":2,"entity":3,"notation":4,"elementName":5,"attlistName":6,"entityName":7,"notationName":8,"mixed":9,"elementEnd":10,"children":11,"atttype":12,"attdef":13,"entityEnd":14,"notationEnd":15},
	"shorthands":["s","[ \t\r\n]","nameStart","[:_a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\uD800-\\uDBBF]",
		"nameRemain","[-\\.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040{nameStart}]",
		"name","{nameStart}{nameRemain}*","encName","[A-Za-z][-A-Za-z0-9_\\.]*","eq","{s}*={s}*","nmtoken","{nameRemain}+",
		"pubidLiteral","(\"[-'()+,./:=?;!*#@$_% \\r\\na-zA-Z0-9]*\"|'[-()+,./:=?;!*#@$_% \\r\\na-zA-Z0-9]*')"],
    "rules":[
		{"old state":"init","new state":"init","type":"directive","regex":"<\\?xml({s}+version{eq}('1\\.[0-9]+'|\"1\\.[0-9]+\"))?{s}+encoding{eq}('{encName}'|\"{encName}\"){s}*\\?>"},
		{"old state":"init","new state":"init","type":"comment","regex":"<!--([^-]|-[^-])*-->"},
		{"old state":"init","new state":"init","type":"whitespace","regex":"\\s+"},
		{"old state":"init","new state":"init","type":"reference","regex":"%{name};"},
		{"old state":"init","new state":"init","type":"directive","regex":"<\\?{name}({s}([^?]|\\?[^>])*)?\\?>"},
		{"old state":"init","new state":"init","type":"keyword","regex":"<!\\[{s}*(INCLUDE|IGNORE|%{name};){s}*\\["},
		{"old state":"init","new state":"init","type":"keyword","regex":"\\]\\]>"},
		{"old state":"init","new state":"elementName","type":"keyword","regex":"<!ELEMENT{s}+"},
	    {"old state":"elementName","new state":"element","type":"key","regex":"{name}{s}+"},
	    {"old state":"element","new state":"elementEnd","type":"value","regex":"EMPTY|ANY|\\({s}*#PCDATA{s}*\\)(?!\\*)"},
	    {"old state":"element","new state":"mixed","type":"value","regex":"\\({s}*#PCDATA"},
		{"old state":"mixed","new state":"mixed","type":"other","regex":"{s}*\\|"},
		{"old state":"mixed","new state":"mixed","type":"value","regex":"{s}*{name}"},
	    {"old state":"mixed","new state":"elementEnd","type":"value","regex":"{s}*\\)\\*"},
	    {"old state":"element","new state":"children","type":"other","regex":"\\("},
		{"old state":"children","new state":"children","type":"value","regex":"{s}*{name}"},
		{"old state":"children","new state":"children","type":"other","regex":"{s}*[?*+,|)(]"},
		{"old state":"children","new state":"init","type":"keyword","regex":"{s}*>"},
		{"old state":"elementEnd","new state":"init","type":"keyword","regex":"{s}*>"},
		{"old state":"init","new state":"attlistName","type":"keyword","regex":"<!ATTLIST{s}+"},
		{"old state":"attlistName","new state":"attlist","type":"key","regex":"{name}"},
		{"old state":"attlist","new state":"atttype","type":"key","regex":"{s}+{name}"},
		{"old state":"atttype","new state":"attdef","type":"type","regex":"{s}+(CDATA|IDREFS|IDREF|ID|ENTITY|ENTITIES|NMTOKENS|NMTOKEN|NOTATION{s}+\\({s}*{name}({s}*\\|{s}*{name})*{s}*\\)|\\({s}*{nmtoken}({s}*\\|{s}*{nmtoken})*\\))"},
		{"old state":"attdef","new state":"attlist","type":"value","regex":"{s}+(#REQUIRED|#IMPLIED|(#FIXED{s}+)?('[^'<]*'|\"[^\"<]*\"))"},
	    {"old state":"attlist","new state":"init","type":"keyword","regex":"{s}*>"},
	    {"old state":"init","new state":"entityName","type":"keyword","regex":"<!ENTITY{s}+(%{s}+)?"},
	    {"old state":"entityName","new state":"entity","type":"key","regex":"{name}"},
	    {"old state":"entity","new state":"entityEnd","type":"value","regex":"{s}+(\"([^\"%&]|[%&]{name};)*\"|'([^'%&]|[%&]{name};)*')"},
	    {"old state":"entity","new state":"entityEnd","type":"value","regex":"{s}+(SYSTEM|PUBLIC{s}+{pubidLiteral}){s}+(\"[^\"]*\"|'[^']*'){s}+NDATA{s}+{name}"},
	    {"old state":"entityEnd","new state":"init","type":"keyword","regex":"{s}*>"},
	    {"old state":"init","new state":"notationName","type":"keyword","regex":"<!NOTATION{s}+"},
	    {"old state":"notationName","new state":"notation","type":"keyword","regex":"{name}"},
	    {"old state":"notation","new state":"notationEnd","type":"keyword","regex":"{s}+PUBLIC{s}+{pubidLiteral}({s}+(\"[^\"]*\"|'[^']*'))?"},
	    {"old state":"notationEnd","new state":"init","type":"keyword","regex":"{s}*>"}
	]
}
