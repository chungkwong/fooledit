{
	"states":{"init":0},
	"shorthands":["id","([_a-zA-Z]([_0-9a-zA-Z']|::)*|\\^[A-Z^_?\\\\\\[\\]]|[0-9]+|[\\p{Punct}&&[^\\}\\{]])"],
	"rules":[
		{"old state":"init","new state":"init","type":"keyword","regex":"__FILE__|__LINE__|__PACKAGE__|__SUB__|__DATA__|__END__|and|cmp|continue|dump|else|elsif|eq|for(each)?|ge|given|gt|goto|if|last|le|lt|ne(xt)?|not|or|redo|unless|until|when|while|xor|\\.\\.\\."},
		{"old state":"init","new state":"init","type":"comment","regex":"#[^\\r\\n]*|^=[a-zA-Z].*?=cut"},
		{"old state":"init","new state":"init","type":"whitespace","regex":"\\s+"},
		{"old state":"init","new state":"init","type":"string","regex":"\"([^\\\\\"]|\\\\.)*\"|'([^\\\\']|\\\\['\\\\])*'"},
		{"old state":"init","new state":"init","type":"name","regex":"[_a-zA-Z][_a-zA-Z0-9]*"},
		{"old state":"init","new state":"init","type":"float","regex":"([0-9](_?[0-9])*\\.([0-9](_?[0-9])*)?|\\.[0-9](_?[0-9])*)([eE][-+]?[0-9]+)?|0[xX]([0-9a-fA-F](_?[0-9a-fA-F])*\\.?|([0-9a-fA-F](_?[0-9a-fA-F])*)?\\.([0-9a-fA-F](_?[0-9a-fA-F])*))[pP][-+]?[0-9]+"},
		{"old state":"init","new state":"init","type":"float","regex":"[0-9](_?[0-9])*[eE][-+]?[0-9]+"},
		{"old state":"init","new state":"init","type":"integer","regex":"[1-9](_?[0-9])*|0[xX][0-9a-fA-F](_?[0-9a-fA-F])*|0[bB][01](_?[01])*|0(_?[0-7])*"},
		{"old state":"init","new state":"init","type":"variable","regex":"[@%\\$\\*]({id}|\\{{id}\\})"},
		{"old state":"init","new state":"init","type":"other","regex":"::|=>|->|::|\\.{1,3}|[-+*/%\\\\~',;\\(\\)\\[\\]\\{\\}=?:<>\\|\\&^!]"}
	]
}